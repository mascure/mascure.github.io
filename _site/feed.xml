<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mascure&#39;s blog</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://mascure.info/</link>
    <atom:link href="http://mascure.info/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 29 Aug 2015 20:22:05 +0800</pubDate>
    <lastBuildDate>Sat, 29 Aug 2015 20:22:05 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>异步非阻塞IO</title>
        <description>&lt;p&gt;最近在看nginx。nginx以其卓越的性能在发布后广受欢迎，而它性能之所以高，是因为采用了
事件驱动模型来达到异步非阻塞IO。由于Nginx本质上是运行在一台Linux机器上的一个进程，它所涉及到的只能是一些运算，和IO（磁盘IO或socket IO）。因此此处的异步非阻塞IO只能涉及到两个系统对象，一个是调用这个IO的进程，另一个是系统内核（只有内核才有权限执行IO）。因此阻塞与否谈得是调用这个IO的进程会不会阻塞，而同步异步谈的是进程和内核之间是否存在等待。&lt;br /&gt;
当一个read操作发生时，会经历两个阶段：&lt;br /&gt;
1 等待数据准备&lt;br /&gt;
2 将数据从内核拷贝到进程中&lt;/p&gt;

&lt;p&gt;根据stackoverflow上的&lt;a href=&quot;http://stackoverflow.com/questions/2625493/asynchronous-vs-non-blocking&quot;&gt;这个解释&lt;/a&gt;，阻塞和同步可以理解为同一个事物，即进程调用一个API，进程本身被挂起直到内核返回结果。而非阻塞和异步则不同，非阻塞意味着如果结果不能立即返回，那么API立即返回一个错误并且什么也不做，因此需要进程有某种查询的方法来看API是否可以被调用。而异步意味着API总是立即返回，并在“后台”开始准备结果，准备完成后通知进程。&lt;/p&gt;

&lt;p&gt;所以一个阻塞式的IO是这样的：
&lt;img src=&quot;/images/blocking_IO.gif&quot; alt=&quot;blocking IO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一个同步非阻塞式的IO是这样的：
&lt;img src=&quot;/images/non_blocking_IO.gif&quot; alt=&quot;non-blocking IO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;非阻塞比阻塞优势在于，进程不必等待数据准备好，并且可以过一段时间查询一次，而这段时间可以用来做别的事，提高了效率。&lt;/p&gt;

&lt;p&gt;一个异步非阻塞式的IO是这样的： 
&lt;img src=&quot;/images/asynchronous_non_blocking_IO.gif&quot; alt=&quot;asynchronous_non-blocking IO&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，进程读调用结束后立即返回，内核将会等待数据准备好，然后将数据拷贝到进程空间，再发信号给进程，进程处理函数将会处理结果。这种方式比同步非阻塞的方式优势在于，不必反复查询数据是否准备好，也不用等待数据从内核拷贝到进程。&lt;/p&gt;

&lt;p&gt;因此，对于大量的访问请求，第三种方式，即异步非阻塞的IO无疑是最高效的。&lt;/p&gt;

&lt;p&gt;一些资料:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zhihu.com/question/19732473&quot;&gt;http://www.zhihu.com/question/19732473&lt;/a&gt;
&lt;a href=&quot;http://blog.csdn.net/historyasamirror/article/details/5778378&quot;&gt;http://blog.csdn.net/historyasamirror/article/details/5778378&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 28 Aug 2015 07:24:25 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/28/asynchronous-non-blocking-io.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/28/asynchronous-non-blocking-io.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>静心，多行善事</title>
        <description>&lt;p&gt;这几天心里颇不宁静。起伏太大。本来就一直躁动不安的我，没想到落得今天如此地步，也是我自作孽，不可活。
今天听到mjf的结果，虽然当时不免失落，但现在心里反倒非常宁静了，任何结果我都可以接受了，任何最坏的结果。想想这几个月以来，被绑架的头脑，因为太过年轻，太过偏执，太过自我，是做了多少傻事，最终居然引得老板对我做出最决绝的决定。&lt;/p&gt;

&lt;p&gt;要慢慢让自己平静下来，不管遇到什么事，都要保持冷静，保持一颗平常心。还要多做善事，帮助别人。也许我会慢慢同情那些在地铁里乞讨的人，给他们一点施舍。邻居不在家就帮他收一下快递。&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Aug 2015 07:17:21 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/25/be-calm.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/25/be-calm.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>8.17</title>
        <description>&lt;p&gt;bd从一面到今天正好两周，最终还是在三面挂在了‘高并发’经验不足上。可是这就是个悖论啊，从没有搞过的东西怎么会有经验，即使再聪明也不可能现场给你画饼。有高并发经验的估计也就屈指可数的几个网站吧。&lt;/p&gt;

&lt;p&gt;李笑来说，没有经验导致没法得到工作，进而没有工作经验，看起来就永远无法找到工作。摆脱的方法是：给我什么我就用好什么，积累到一定程度再去换能换的东西。但我现在也不能什么工作都接，要跳起来摘苹果。&lt;/p&gt;

&lt;p&gt;眼下之计，落户貌似不再有公司什么事了，甚至8月底之前就可能会办好。如此的话，就没必要再去IBM的测试了，反正去那里纯粹就是为了保住户口。而我静下心来，好好找工作，最多一个月，也可以找到不错的了吧。怎么算不错？看心里面喜不喜欢吧。&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Aug 2015 06:26:59 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/18/8.17.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/18/8.17.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>为博客添加评论</title>
        <description>&lt;p&gt;去国外绕了一圈，还是回来了。&lt;/p&gt;

&lt;p&gt;最开始搜索jekyll comment，搜到的是&lt;a href=&quot;https://github.com/mpalmer/jekyll-static-comments/&quot;&gt;这个&lt;/a&gt;，可是在按照步骤配置好以后，页面上的评论部分是显示出来了，但点击评论时会提示不允许使用post方法。这让我很诧异，难道jekyll不允许使用post方法，还是comment部分在接收时出了问题，去网上找解决办法，因为这是mpalmer在git上的一个项目，受众比较小，没有搜到有价值的回答。自己也没心情去研究它的代码。于是只好换别的评论系统。&lt;/p&gt;

&lt;p&gt;然后就看到disqus，一个第三方的评论管理平台，这才意识到mpalmer的评论其实是存在本地的，那就会有一个很大的优势：速度快。大概了解了下disqus的安装步骤之后，就开始安装。可是第一步就卡住了，disqus.com页面始终刷不出来，包括使用代理。于是可以想到这样的画面，即使安装成功，在现实博客的时候，评论部分始终在加载，标题上的那个圈圈始终在转，这是多么令人不爽。于是决定，找国内的类似平台。&lt;/p&gt;

&lt;p&gt;于是找到了&lt;a href=&quot;duoshuo.com/&quot;&gt;多说&lt;/a&gt;，用法就是把一段代码插入到博客内容的下面。jekyll用的是模板，所以，只需在模板里面加入这段代码就行了。
代码如下。把头部的三个变量按提示替换掉即可(把&lt;code&gt;\&lt;/code&gt;去掉，为什么后面会说)。&lt;/p&gt;

&lt;p&gt;发现国内的果然加载超级快，哈哈。&lt;/p&gt;

&lt;p&gt;_includes/comment.html&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 多说评论框 start --&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ds-thread&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-thread-key=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\{\{page.id\}\}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\{\{page.title\}\}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-url=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;\{\{site.url\}\}\{\{page.id\}\}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 多说评论框 end --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 多说公共JS代码 start (一个网页只需插入一次) --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;duoshuoQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;short_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;mascure&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http:&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;//static.duoshuo.com/embed.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UTF-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; 
		 &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 多说公共JS代码 end --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在&lt;code&gt;_layouts/post.html&lt;/code&gt;文件的末尾，加入代码&lt;code&gt;\{\% include comment.html \%\}&lt;/code&gt;。
（把&lt;code&gt;\&lt;/code&gt;去掉）&lt;/p&gt;

&lt;p&gt;在搭建的过程中，一直有一个疑惑，类似site.url,page.id这样的变量并没有在哪个文件里面设置（用grep查找），却可以在页面里使用，这是为什么。于是猜测这是jekyll定义的变量。jekyll的&lt;a href=&quot;http://jekyllrb.com/docs/variables/&quot;&gt;官方文档&lt;/a&gt;，可以看到有三类变量，global，site，page，在页面中可以用&lt;code&gt;\{\{变量名\}\}&lt;/code&gt;的方法使用，在生成静态页面的时候，jekyll会把所有这样的变量替换为对应的值。所以上文里要加&lt;code&gt;\&lt;/code&gt;以防止被替换掉。&lt;/p&gt;

</description>
        <pubDate>Thu, 13 Aug 2015 23:01:39 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/13/add-comment-to-my-blog.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/13/add-comment-to-my-blog.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>insert time in vim</title>
        <description>&lt;p&gt;在vim中快速插入当前系统时间，可以通过修改vim的配置文件，将F5映射到打印系统时间。&lt;/p&gt;

&lt;p&gt;这就涉及到修改vim的配置文件。vimrc是vim最主要的配置文件，它有两个版本，全局版本（global）和用户版本（personal）。全局vimrc文件在Vim的安装目录中，我的电脑是Mac，所以其路径是
/usr/share/vim/vimrc，用户版本的vimrc文件在当前用户的主目录下，主目录的位置依赖于操作系统。Mac下的用户vimrc文件路径为：
/Users/用户名/.vimrc。但是Mac下默认是没有用户vimrc的，所以需要自己创建一个。用户版的vimrc会覆盖全局版。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:nnoremap &amp;lt;F5&amp;gt; &quot;=strftime(&quot;%F&quot;)&amp;lt;CR&amp;gt;gP
:inoremap &amp;lt;F5&amp;gt; &amp;lt;C-R&amp;gt;=strftime(&quot;%F&quot;)&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将上面两行加入$HOME/.vimrc中，就可以在一般模式和编辑模式下用快捷键F5，插入当前系统时间了。这里设置的时间格式是xxxx-xx-xx。可以按照需要修改为自己想要的模式。比如修改为&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;，可以将%F替换为&lt;code&gt;\%Y-\%m-\%d \%H:\%M:\%S&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;至此，大功告成。&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Aug 2015 04:32:47 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/13/insert-time-in-vim.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/13/insert-time-in-vim.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Draft Posts</title>
        <description>&lt;p&gt;abc
abc&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Aug 2015 21:39:26 +0800</pubDate>
        <link>http://mascure.info/2015/08/11/draft-posts.html</link>
        <guid isPermaLink="true">http://mascure.info/2015/08/11/draft-posts.html</guid>
        
        
      </item>
    
      <item>
        <title>build my blog</title>
        <description>&lt;p&gt;后续要做：博客front matter的date按F5自动加入；把以前的博客迁移过来；添加评论；&lt;/p&gt;

&lt;p&gt;建立了自己的博客，终于有自己的一片天地了。&lt;/p&gt;

&lt;p&gt;我是在github pages存放博客内容的，用jekyll生成的静态博客，然后把github.io的域名绑定到新买的域名，也就是现在的mascure.info上。
未完待续，要睡觉了。&lt;/p&gt;

&lt;h1 id=&quot;section&quot;&gt;0、以前的博客&lt;/h1&gt;
&lt;p&gt;我之前已经借助&lt;a href=&quot;http://isnowfy.github.io/about-simple-cn.html&quot;&gt;isnowfy&lt;/a&gt;在github page上搭建了一个静态博客，挺好用的一个工具，可以在线编辑文章，然后发布，这个工具会自动把你的内容生成静态页面发到你的git上去（需要提供用户名密码）。另外就是用到了markdown语法，很简洁的一个类似于html的标记语言。但毕竟是他自己写的一个工具，其他特性不能支持，比如更改主题，添加评论等。于是切换到jekyll上，也是非常简单易用。&lt;/p&gt;

&lt;h1 id=&quot;gitmascuregithubioproject&quot;&gt;1、git上创建名为mascure.github.io的project&lt;/h1&gt;
&lt;p&gt;github 为每个账号提供了300M的空间，用以用户或组织的介绍，这个空间只能对应于username.github.io的项目，该项目里面只要提供了网站相应内容，用户就可以通过username.github.io的域名访问。这一步在步骤0上，isnowfy的工具已经帮我做了。这一步做完后clone到本地来，比如我的是mascure.github.io的文件夹。此时文件夹里面应该只有一个README.md文件。&lt;/p&gt;

&lt;h1 id=&quot;jekyll&quot;&gt;2、安装jekyll&lt;/h1&gt;
&lt;p&gt;安装非常简单，&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但gem使用的默认的源是https://rubygems.org，因为国内网络原因（你懂的），导致 rubygems.org 间歇性连接失败，所以敲了命令后半天没有反应，可以用&lt;code&gt;gem install rails -V&lt;/code&gt;来查看执行过程。需要将源切换到国内淘宝的源，具体步骤如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem sources --remove https://rubygems.org/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem sources -a https://ruby.taobao.org/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem sources -l
*** CURRENT SOURCES ***

https://ruby.taobao.org
&lt;span class=&quot;c&quot;&gt;# 请确保只有 ruby.taobao.org&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install jekyll&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-1&quot;&gt;3、初始化博客目录&lt;/h1&gt;
&lt;p&gt;这一步是按照jekyll的目录结构初始化mascure.github.io的文件夹。可以用&lt;code&gt;jekyll new myblog&lt;/code&gt;先创建一个文件夹，然后把该目录下所有文件拷贝到mascure.github.io。&lt;/p&gt;

&lt;h1 id=&quot;section-2&quot;&gt;4、编辑，预览，发布&lt;/h1&gt;
&lt;p&gt;此时可以看到目录中有_posts，_layouts等文件夹，写博客是在_posts下，可以看到有一篇2015-08-08-welcome-to-jekyll.markdown的文章，可以参照这篇文章来写。按照格式要求写好front matter，然后就是用markdown语法写博文了。文件名也必须严格符合要求的格式。此时可以敲入&lt;code&gt;jekyll serve&lt;/code&gt;就在本地建立了一个web服务器，浏览器用&lt;code&gt;http://localhost:4000&lt;/code&gt;就可以访问网站了。这个主要是一个预览的功能，能够在本地就看一下效果，并且每一次更改，jekyll都可以检测到，并生成对应的静态页面（在_sites目录下）。如果不想在本地预览直接发布的话，可以使用&lt;code&gt;jekyll build&lt;/code&gt;生成静态页面即可。&lt;/p&gt;

&lt;p&gt;生成好静态博客后，就可以推送到git上面去了，步骤如下&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add . --all
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit -m &lt;span class=&quot;s1&quot;&gt;&amp;#39;new blog&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;git默认使用的协议是http的，可以用&lt;code&gt;git remote -v&lt;/code&gt;看到。这个会导致push失败，所以要改成ssh协议，步骤如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote rm origin
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add origin git@github.com:mascure/mascure.github.io.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1 id=&quot;section-3&quot;&gt;关于设置独立域名&lt;/h1&gt;
&lt;p&gt;网站设置好以后，用的是mascure.github.io的域名访问。要想设置独立域名的话，比如我用mascure.info访问，只需在根目录下添加一个文件CNAME，里面只写一行，就是mascure.info。然后就是把mascure.info的DNS provider中添加一条CNAME的记录，具体步骤见&lt;a href=&quot;https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;

</description>
        <pubDate>Tue, 11 Aug 2015 21:17:58 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/11/build-my-blog.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/11/build-my-blog.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>draft2</title>
        <description>&lt;p&gt;hello!&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Aug 2015 21:17:58 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/09/draft2.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/09/draft2.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;wzj&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 08 Aug 2015 21:17:58 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/08/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/08/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>blogtest</title>
        <description>&lt;p&gt;hello world!
in my git&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Aug 2015 21:17:58 +0800</pubDate>
        <link>http://mascure.info/jekyll/update/2015/08/08/blogtest.html</link>
        <guid isPermaLink="true">http://mascure.info/jekyll/update/2015/08/08/blogtest.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
